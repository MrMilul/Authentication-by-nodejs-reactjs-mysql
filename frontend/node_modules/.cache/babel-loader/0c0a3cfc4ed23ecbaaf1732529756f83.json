{"ast":null,"code":"var toInteger = require('./toInteger');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\n\nfunction before(n, func) {\n  var result;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  n = toInteger(n);\n  return function () {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n\n    if (n <= 1) {\n      func = undefined;\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = before;","map":{"version":3,"sources":["/home/milul/Documents/WebProg/Projets/node authen/frontend/node_modules/lodash/before.js"],"names":["toInteger","require","FUNC_ERROR_TEXT","before","n","func","result","TypeError","apply","arguments","undefined","module","exports"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;AAEA;;;AACA,IAAIC,eAAe,GAAG,qBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAgBC,CAAhB,EAAmBC,IAAnB,EAAyB;AACvB,MAAIC,MAAJ;;AACA,MAAI,OAAOD,IAAP,IAAe,UAAnB,EAA+B;AAC7B,UAAM,IAAIE,SAAJ,CAAcL,eAAd,CAAN;AACD;;AACDE,EAAAA,CAAC,GAAGJ,SAAS,CAACI,CAAD,CAAb;AACA,SAAO,YAAW;AAChB,QAAI,EAAEA,CAAF,GAAM,CAAV,EAAa;AACXE,MAAAA,MAAM,GAAGD,IAAI,CAACG,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAAT;AACD;;AACD,QAAIL,CAAC,IAAI,CAAT,EAAY;AACVC,MAAAA,IAAI,GAAGK,SAAP;AACD;;AACD,WAAOJ,MAAP;AACD,GARD;AASD;;AAEDK,MAAM,CAACC,OAAP,GAAiBT,MAAjB","sourcesContent":["var toInteger = require('./toInteger');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\nmodule.exports = before;\n"]},"metadata":{},"sourceType":"script"}