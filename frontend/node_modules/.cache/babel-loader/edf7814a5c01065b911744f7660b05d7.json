{"ast":null,"code":"var baseFill = require('./_baseFill'),\n    isIterateeCall = require('./_isIterateeCall');\n/**\n * Fills elements of `array` with `value` from `start` up to, but not\n * including, `end`.\n *\n * **Note:** This method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Array\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.fill(array, 'a');\n * console.log(array);\n * // => ['a', 'a', 'a']\n *\n * _.fill(Array(3), 2);\n * // => [2, 2, 2]\n *\n * _.fill([4, 6, 8, 10], '*', 1, 3);\n * // => [4, '*', '*', 10]\n */\n\n\nfunction fill(array, value, start, end) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return [];\n  }\n\n  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n    start = 0;\n    end = length;\n  }\n\n  return baseFill(array, value, start, end);\n}\n\nmodule.exports = fill;","map":{"version":3,"sources":["/home/milul/Documents/WebProg/Projets/node authen/frontend/node_modules/lodash/fill.js"],"names":["baseFill","require","isIterateeCall","fill","array","value","start","end","length","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;AAAA,IACIC,cAAc,GAAGD,OAAO,CAAC,mBAAD,CAD5B;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,IAAT,CAAcC,KAAd,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmCC,GAAnC,EAAwC;AACtC,MAAIC,MAAM,GAAGJ,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoBA,KAAK,CAACI,MAAvC;;AACA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,EAAP;AACD;;AACD,MAAIF,KAAK,IAAI,OAAOA,KAAP,IAAgB,QAAzB,IAAqCJ,cAAc,CAACE,KAAD,EAAQC,KAAR,EAAeC,KAAf,CAAvD,EAA8E;AAC5EA,IAAAA,KAAK,GAAG,CAAR;AACAC,IAAAA,GAAG,GAAGC,MAAN;AACD;;AACD,SAAOR,QAAQ,CAACI,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAsBC,GAAtB,CAAf;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBP,IAAjB","sourcesContent":["var baseFill = require('./_baseFill'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Fills elements of `array` with `value` from `start` up to, but not\n * including, `end`.\n *\n * **Note:** This method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Array\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.fill(array, 'a');\n * console.log(array);\n * // => ['a', 'a', 'a']\n *\n * _.fill(Array(3), 2);\n * // => [2, 2, 2]\n *\n * _.fill([4, 6, 8, 10], '*', 1, 3);\n * // => [4, '*', '*', 10]\n */\nfunction fill(array, value, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n    start = 0;\n    end = length;\n  }\n  return baseFill(array, value, start, end);\n}\n\nmodule.exports = fill;\n"]},"metadata":{},"sourceType":"script"}